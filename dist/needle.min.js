/*!
 * Needle v1.0.0-alpha | MIT 
 * Copyright (c) 2015 Nick Zuber <zuber.nicholas@gmail.com>
 */
!function e(t,n,i){function r(s,d){if(!n[s]){if(!t[s]){var f="function"==typeof require&&require;if(!d&&f)return f(s,!0);if(o)return o(s,!0);throw new Error("Cannot find module '"+s+"'")}var u=n[s]={exports:{}};t[s][0].call(u.exports,function(e){var n=t[s][1][e];return r(n?n:e)},u,u.exports,e,t,n,i)}return n[s].exports}for(var o="function"==typeof require&&require,s=0;s<i.length;s++)r(i[s]);return r}({1:[function(e,t,n){const i=e("./lib/singlyLinkedList.js"),r={};r.SinglyLinkedList=i,n=t.exports=r,n.Needle=r,"undefined"!=typeof window&&(window.Needle=r)},{"./lib/singlyLinkedList.js":2}],2:[function(e,t,n){const i=e("./unidirectional_node.js"),r=function(e){this.head,this.size,"undefined"!=typeof e?(this.head=new i(e),this.size=1):(this.head=null,this.size=0)};r.prototype.insertFront=function(e){if("undefined"==typeof e)throw new Error("Too few arguments for SinglyLinkedList.insert");var t=new i(e);if(null===this.head)this.head=t;else{var n=this.head;this.head=t,this.head.next=n}++this.size},r.prototype.insertNth=function(e,t){if("undefined"==typeof t||"undefined"==typeof e)throw new Error("Too few arguments for SinglyLinkedList.insert");if("number"!=typeof e)throw new TypeError("Invalid argument for SinglyLinkedList.insert");if(0>e||e>=this.size)throw new Error("Index out of bounds on SinglyLinkedList.insertNth");if(null===this.head)return!1;for(var n=new i(t),r=this.head,o=0;e>o;++o)r=r.next;var s=r.next;r.next=n,n.next=s,++this.size},r.prototype.insertAfter=function(e,t){if("undefined"==typeof t||"undefined"==typeof e)throw new Error("Too few arguments for SinglyLinkedList.insert");if(null===this.head)return!1;for(var n=new i(t),r=this.head,o=!1;null!==r.next;){if(JSON.stringify(r.data)===JSON.stringify(e)){o=!0;break}r=r.next}if(!o)return!1;var s=r.next;r.next=n,n.next=s,++this.size},r.prototype.insertBack=function(e){if("undefined"==typeof e)throw new Error("Too few arguments for SinglyLinkedList.insert");var t=new i(e);if(null===this.head)this.head=t;else{for(var n=this.head;null!==n.next;)n=n.next;n.next=t}++this.size},r.prototype.remove=function(e){if("undefined"==typeof e)throw new Error("Too few arguments for SinglyLinkedList.remove");if(this.size<=0)throw new Error("Attempted to remove from an empty SinglyLinkedList");if(null===this.head&&this.size>0)throw new Error("Null head in an unemptied list. Please report this to https://github.com/nickzuber/needle/issues");var t=null;if(curNode=this.head,nodeFound=!1,JSON.stringify(curNode.data)===JSON.stringify(e))return this.head=curNode.next,curNode=null,--this.size,!0;for(t=curNode,curNode=t.next;null!==curNode;){if(JSON.stringify(curNode.data)===JSON.stringify(e)){nodeFound=!0,t.next=curNode.next,curNode=null,--this.size;break}t=curNode,curNode=curNode.next}return nodeFound},r.prototype.removeNth=function(e){if("undefined"==typeof e)throw new Error("Too few arguments for SinglyLinkedList.removeNth");if("number"!=typeof e)throw new TypeError("Invalid argument for SinglyLinkedList.removeNth");if(0>e||e>=this.size)throw new Error("Index out of bounds on SinglyLinkedList.removeNth");var t=null,n=this.head;if(0===e)return this.head=n.next,n=null,void--this.size;t=n,n=n.next;for(var i=1;e>i;++i)t=n,n=n.next;t.next=n.next,n=null,--this.size},r.prototype.find=function(e){if("undefined"==typeof e)throw new Error("Too few arguments for SinglyLinkedList.find");if(this.size<=0)throw new Error("Attempted to find a node from an empty SinglyLinkedList");if(null===this.head&&this.size>0)throw new Error("Null head in an unemptied list. Please report this to https://github.com/nickzuber/needle/issues");for(var t=this.head,n=!1;null!==t;){if(JSON.stringify(t.data)===JSON.stringify(e)){n=!0;break}t=t.next}return n?t:!1},r.prototype.findNth=function(e){if("undefined"==typeof e)throw new TypeError("Too few arguments for SinglyLinkedList.findNth");if("number"!=typeof e)throw new TypeError("Invalid argument for SinglyLinkedList.findNth");if(0>e||e>=this.size)throw new Error("Index out of bounds; attempted to find a node from a SinglyLinkedList that does not exist");if(null===this.head&&this.size>0)throw new Error("Null head in an unemptied list. Please report this to https://github.com/nickzuber/needle/issues");for(var t=this.head,n=0;e>n;++n)t=t.next;return t},t.exports=r},{"./unidirectional_node.js":3}],3:[function(e,t,n){const i=function(e){this.data=e||void 0,this.next=null};t.exports=i},{}]},{},[1]);