!function e(t,n,i){function r(s,f){if(!n[s]){if(!t[s]){var u="function"==typeof require&&require;if(!f&&u)return u(s,!0);if(o)return o(s,!0);throw new Error("Cannot find module '"+s+"'")}var d=n[s]={exports:{}};t[s][0].call(d.exports,function(e){var n=t[s][1][e];return r(n?n:e)},d,d.exports,e,t,n,i)}return n[s].exports}for(var o="function"==typeof require&&require,s=0;s<i.length;s++)r(i[s]);return r}({1:[function(e,t,n){const i=e("./lib/singlyLinkedList.js"),r={};r.SinglyLinkedList=i,n=t.exports=r,n.Needle=r,window.Needle=r},{"./lib/singlyLinkedList.js":2}],2:[function(e,t,n){const i=e("./unidirectional_node.js"),r=function(e){this.head,this.size,"undefined"!=typeof e?(this.head=new i(e),this.size=1):(this.head=null,this.size=0)};r.prototype.insert=function(e){if("undefined"==typeof e)throw new Error("Too few arguments for SinglyLinkedList.insert");var t=new i(e);if(null===this.head)this.head=t;else{for(var n=this.head;null!==n.next;)n=n.next;n.next=t,++this.size}},r.prototype.remove=function(e){if("undefined"==typeof e)throw new Error("Too few arguments for SinglyLinkedList.remove");if(this.size<=0)throw new Error("Attempted to remove from an empty SinglyLinkedList");if(null===this.head&&this.size>0)throw new Error("Null head in an unemptied list. Please report this to https://github.com/nickzuber/needle/issues");for(var t=0,n=this.head,i=!1;null!==n;){if(JSON.stringify(n.data)===JSON.stringify(e)){i=!0;break}++t,n=n.next}return i&&this.removeNth(t),i},r.prototype.removeNth=function(e){if("number"!=typeof e)throw new Error("Invalid argument for SinglyLinkedList.removeNth");if(0>e||e>=this.size)throw new Error("Index out of bounds; attempted to remove a node from a SinglyLinkedList that does not exist");var t=null,n=this.head;if(0===e)return this.head=n.next,n=null,void--this.size;t=n,n=n.next;for(var i=1;e>i;++i)t=n,n=n.next;t.next=n.next,n=null,--this.size},r.prototype.find=function(e){},r.prototype.findNth=function(e){},t.exports=r},{"./unidirectional_node.js":3}],3:[function(e,t,n){const i=function(e){this.data=e||void 0,this.next=null};t.exports=i},{}]},{},[1]);