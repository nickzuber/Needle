/*!
 * Needle v1.0.0-alpha | MIT 
 * Copyright (c) 2015 Nick Zuber <zuber.nicholas@gmail.com>
 */
!function t(e,i,n){function r(s,h){if(!i[s]){if(!e[s]){var u="function"==typeof require&&require;if(!h&&u)return u(s,!0);if(o)return o(s,!0);throw new Error("Cannot find module '"+s+"'")}var f=i[s]={exports:{}};e[s][0].call(f.exports,function(t){var i=e[s][1][t];return r(i?i:t)},f,f.exports,t,e,i,n)}return i[s].exports}for(var o="function"==typeof require&&require,s=0;s<n.length;s++)r(n[s]);return r}({1:[function(t,e,i){"use strict";const n=t("./lib/singlyLinkedList.js"),r=t("./lib/queue.js"),o=t("./lib/stack.js"),s=t("./lib/doublyLinkedList.js"),h=t("./lib/binaryHeap.js"),u=t("./lib/binarySearchTree.js"),f=t("./lib/hashmap.js"),a={};a.SinglyLinkedList=n,a.Queue=r,a.Stack=o,a.DoublyLinkedList=s,a.BinaryHeap=h,a.BinarySearchTree=u,a.Hashmap=f,i=e.exports=a,"undefined"!=typeof window&&(window.Needle=a)},{"./lib/binaryHeap.js":4,"./lib/binarySearchTree.js":5,"./lib/doublyLinkedList.js":6,"./lib/hashmap.js":7,"./lib/queue.js":8,"./lib/singlyLinkedList.js":9,"./lib/stack.js":10}],2:[function(t,e,i){"use strict";const n=function(t){this.data=t||void 0,this.next=null,this.prev=null};e.exports=n},{}],3:[function(t,e,i){"use strict";const n=function(t){this.data=t||void 0,this.right=null,this.left=null};e.exports=n},{}],4:[function(t,e,i){"use strict";function n(t,e){return e>t}function r(t,e,i){if("function"!=typeof i)throw new TypeError("Compare must be a function in BinaryHeap");if("undefined"==typeof t&&"undefined"!=typeof e||"undefined"!=typeof t&&"undefined"==typeof e)return!1;if("undefined"!=typeof t&&"undefined"!=typeof e)return i(t,e);throw new TypeError("Comparing two undefined elements in BinaryHeap. Please report this to https://github.com/nickzuber/needle/issues")}Array.prototype.swap=function(t,e){var i=this[t];return this[t]=this[e],this[e]=i,this};const o=function(t){this.heap=[null],this.compare=n,"function"==typeof t&&(this.compare=t)};o.prototype.peek=function(){return this.heap[1]},o.prototype.size=function(){return this.heap.length-1},o.prototype.insert=function(t){if("undefined"==typeof t)throw new Error("Too few arguments for BinaryHeap.insert");if(this.heap.push(t),!(this.heap.length<=2))for(var e=this.heap.length-1;e>1;)r(this.heap[e],this.heap[Math.floor(e/2)],this.compare)&&this.heap.swap(e,Math.floor(e/2)),e=Math.floor(e/2)},o.prototype["delete"]=function(){if(this.heap.length<=1)throw new Error("Attempted to remove min element from an empty binary heap in BinaryHeap.delete");if(2===this.heap.length)return void this.heap.pop();if(this.heap[1]=this.heap.pop(),2===this.heap.length);else if(3===this.heap.length){var t=1;r(this.heap[2*t],this.heap[t],this.compare)&&this.heap.swap(t,2*t)}else for(var e=0,t=1;r(this.heap[2*t],this.heap[t],this.compare)||r(this.heap[2*t+1],this.heap[t],this.compare);){var i;if(i=r(this.heap[2*t],this.heap[2*t+1],this.compare)||"undefined"==typeof this.heap[2*t+1]?2*t:2*t+1,this.heap.swap(t,i),t=i,++e,e>1e3)throw new Error("Timeout error in BinaryHeap.removeMin. Please report this to https://github.com/nickzuber/needle/issues")}},e.exports=o},{}],5:[function(t,e,i){"use strict";function n(t,e){return e>t}function r(t,e,i){if("function"!=typeof i)throw new TypeError("Compare must be a function in BinarySearchTree");if("undefined"==typeof t&&"undefined"!=typeof e||"undefined"!=typeof t&&"undefined"==typeof e)return!1;if("undefined"!=typeof t&&"undefined"!=typeof e)return i(t,e);throw new TypeError("Comparing two undefined elements in BinarySearchTree. Please report this to https://github.com/nickzuber/needle/issues")}const o=t("./bidirectional_tree_node.js"),s=function(t){this.root=null,this.compare=n,"function"==typeof t&&(this.compare=t)};s.prototype.hasRight=function(t){return null!==t.right},s.prototype.hasLeft=function(t){return null!==t.left},s.prototype.isLeaf=function(t){return null===t.left&&null===t.right},s.prototype.emptySubtree=function(t){null!==t&&(this.emptySubtree(t.left),t.left=null,this.emptySubtree(t.right),t.right=null,t=null)},s.prototype.emptyTree=function(){if(null===this.root)throw new Error("Attempted to empty a nulled tree in BinarySearchTree.emptyTree");this.emptySubtree(this.root),this.root=null},s.prototype.heightSubtree=function(t){return null===t?0:1+Math.max(this.heightSubtree(t.left),this.heightSubtree(t.right))},s.prototype.numNodesSubtree=function(t){return null===t?0:1+(this.numNodesSubtree(t.left)+this.numNodesSubtree(t.right))},s.prototype.numLeavesSubtree=function(t){return null===t?0:null===t.left&&null===t.right?1:this.numLeavesSubtree(t.left)+this.numLeavesSubtree(t.right)},s.prototype.insert=function(t,e){if(null===e)throw new Error("Attemped to insert node in a nulled location in BinarySearchTree.insert");return null===this.root?void(this.root=new o(t)):("undefined"==typeof e&&(e=this.root),void(r(t,e.data,this.compare)?this.hasLeft(e)?this.insert(t,e.left):e.left=new o(t):this.hasRight(e)?this.insert(t,e.right):e.right=new o(t)))},s.prototype.search=function(t,e){return null===e?!1:("undefined"==typeof e&&(e=this.root),JSON.stringify(t)===JSON.stringify(e.data)?e:r(t,e.data,this.compare)?this.search(t,e.left):this.search(t,e.right))},e.exports=s},{"./bidirectional_tree_node.js":3}],6:[function(t,e,i){"use strict";const n=t("./bidirectional_node.js"),r=function(t){this.head,this.tail,this.size,"undefined"!=typeof t?(this.head=new n(t),this.tail=this.head,this.size=1):(this.head=null,this.tail=null,this.size=0)};r.prototype.insertFront=function(t){if("undefined"==typeof t)throw new Error("Too few arguments for DoublyLinkedList.insertFront");var e=new n(t);if(null===this.head&&null===this.tail)this.head=e,this.tail=this.head;else{if(null===this.head||null===this.tail)throw new Error("Unsynced head and tail in an Doubly Linked List. Please report this to https://github.com/nickzuber/needle/issues");var i=this.head;i.prev=e,this.head=e,this.head.next=i,this.head.prev=null}++this.size},r.prototype.insertNth=function(t,e){if("undefined"==typeof e||"undefined"==typeof t)throw new Error("Too few arguments for DoublyLinkedList.insertNth");if("number"!=typeof t)throw new TypeError("Invalid argument for DoublyLinkedList.insertNth");if(0>t||t>=this.size&&0!==t)throw new Error("Index out of bounds on DoublyLinkedList.insertNth");if(0===t)return void this.insertFront(e);if(null===this.head)return!1;if(t===this.size-1)return void this.insertBack(e);for(var i=new n(e),r=this.head,o=1;t>o;++o)r=r.next;var s=r.next;r.next=i,s.prev=i,i.prev=r,i.next=s,++this.size},r.prototype.insertAfter=function(t,e){if("undefined"==typeof e||"undefined"==typeof t)throw new Error("Too few arguments for DoublyLinkedList.insertAfter");if(null===this.head)return!1;var i,r,o=new n(e),s=this.head,h=!1;if(r="object"==typeof t?JSON.stringify(t):t,i="object"==typeof s.data?JSON.stringify(s.data):s.data,JSON.stringify(this.tail.data)===JSON.stringify(t))return this.insertBack(e),!0;for(;null!==s;){if(i="object"==typeof s.data?JSON.stringify(s.data):s.data,i===r){h=!0;break}s=s.next}if(h){var u=s.next;return s.next=o,u.prev=o,o.prev=s,o.next=u,++this.size,!0}return!1},r.prototype.insertBack=function(t){if("undefined"==typeof t)throw new Error("Too few arguments for DoublyLinkedList.insert");var e=new n(t);null===this.head?(this.head=e,this.tail=this.head):(e.next=null,e.prev=this.tail,this.tail.next=e,this.tail=e),++this.size},r.prototype.remove=function(t){if("undefined"==typeof t)throw new Error("Too few arguments for DoublyLinkedList.remove");if(this.size<=0)throw new Error("Attempted to remove from an empty DoublyLinkedList");if(1===this.size)return this.head=null,this.tail=null,void(this.size=0);if(null===this.head&&this.size>0)throw new Error("Null head in an unemptied list. Please report this to https://github.com/nickzuber/needle/issues");var e,i,n=this.head,r=!1;if(i="object"==typeof t?JSON.stringify(t):t,e="object"==typeof n.data?JSON.stringify(n.data):n.data,JSON.stringify(this.head.data)===JSON.stringify(t))return this.head=n.next,this.head.prev=null,n=null,--this.size,!0;if(JSON.stringify(this.tail.data)===JSON.stringify(t))return n=this.tail,this.tail=n.prev,this.tail.next=null,n=null,--this.size,!0;for(n=n.next;null!==n;){if(e="object"==typeof n.data?JSON.stringify(n.data):n.data,e===i){r=!0;var o=n.prev;o.next=n.next,n.next.prev=o,n=null,--this.size;break}n=n.next}return r},r.prototype.removeNth=function(t){if("undefined"==typeof t)throw new Error("Too few arguments for DoublyLinkedList.removeNth");if("number"!=typeof t)throw new TypeError("Invalid argument for DoublyLinkedList.removeNth");if(0>t||t>=this.size)throw new Error("Index out of bounds on DoublyLinkedList.removeNth: "+t);if(1===this.size)return this.head=null,this.tail=null,void(this.size=0);var e=this.head;if(0===t)return this.head=e.next,this.head.prev=null,e=null,void--this.size;if(t===this.size-1)return e=this.tail,this.tail=e.prev,this.tail.next=null,e=null,--this.size,!0;e=e.next;for(var i=1;t>i;++i)e=e.next;var n=e.prev;n.next=e.next,e.next.prev=n,e=null,--this.size},r.prototype.find=function(t){if("undefined"==typeof t)throw new Error("Too few arguments for DoublyLinkedList.find");if(this.size<=0)throw new Error("Attempted to find a node from an empty DoublyLinkedList");if(null===this.head&&this.size>0)throw new Error("Null head in an unemptied list. Please report this to https://github.com/nickzuber/needle/issues");for(var e=this.head,i=!1;null!==e;){if(JSON.stringify(e.data)===JSON.stringify(t)){i=!0;break}e=e.next}return i?e:!1},r.prototype.findNth=function(t){if("undefined"==typeof t)throw new TypeError("Too few arguments for DoublyLinkedList.findNth");if("number"!=typeof t)throw new TypeError("Invalid argument for DoublyLinkedList.findNth");if(0>t||t>=this.size)throw new Error("Index out of bounds; attempted to find a node from a SinglyLinkedList that does not exist");if(null===this.head&&this.size>0)throw new Error("Null head in an unemptied list. Please report this to https://github.com/nickzuber/needle/issues");for(var e=this.head,i=0;t>i;++i)e=e.next;return e},e.exports=r},{"./bidirectional_node.js":2}],7:[function(t,e,i){"use strict";function n(t){return typeof t+"_"+JSON.stringify(t)}function r(t){for(var e=0,i=s.head,r=n(t),o=!1;null!==i;){if(n(i.data.key)===r){o=!0;break}++e,i=i.next}if(o)return void s.removeNth(e);throw new Error("Unable to find a non null entry within the internal linked list. Please report this to https://github.com/nickzuber/needle/issues")}const o=t("./doublyLinkedList.js"),s=new o,h=function(){this.buckets={},this.current=void 0};h.prototype.put=function(t,e){if("undefined"==typeof t||"undefined"==typeof e)throw new Error("Too few arguments in Hashmap.put");var i=n(t);if(void 0===this.buckets[i]){var r={key:t,value:e};s.insertBack(r)}this.buckets[i]=e,void 0===this.current&&(this.current=s.head)},h.prototype.get=function(t){if("undefined"==typeof t)throw new Error("Too few arguments in Hashmap.get");var e=n(t);return void 0!==this.buckets[e]?this.buckets[e]:!1},h.prototype["delete"]=function(t){if("undefined"==typeof t)throw new Error("Too few arguments in Hashmap.delete");var e=n(t);return void 0!==this.buckets[e]?(delete this.buckets[e],r(t),!0):!1},h.prototype.next=function(){if(s.size<=0)throw new Error("Cannot get next of an element when map is empty in Hashmap.next()");return this.current=this.current.next,this.current.data},h.prototype.iterater=function(){if(s.size<=0)throw new Error("Cannot get an iterater of a map when it's empty in Hashmap.iterater()");return this.current=s.head,this.current.data},h.prototype.size=function(){return s.size},e.exports=h},{"./doublyLinkedList.js":6}],8:[function(t,e,i){const n=t("./unidirectional_node.js"),r=function(t){this.front,this.back,this.size,"undefined"!=typeof t?(this.front=new n(t),this.back=this.front,this.front.next=this.back,this.back.next=null,this.size=1):(this.front=null,this.back=null,this.size=0)};r.prototype.enqueue=function(t){if("undefined"==typeof t)throw new Error("Too few arguments in Queue.enqueue");var e=new n(t);if(null===this.front&&null===this.back)this.front=e,this.back=this.front,this.front.next=this.back,this.back.next=null,++this.size;else{if(null===this.front||null===this.back)throw new Error("Either front or back is not set in an a queue at once. Please report this to https://github.com/nickzuber/needle/issues");this.back.next=e,this.back=e,++this.size}},r.prototype.dequeue=function(){if(0===this.size)throw new Error("Attempted to dequeue from empty queue in Queue.enqueue");var t=this.front.next;this.front=t,--this.size},e.exports=r},{"./unidirectional_node.js":11}],9:[function(t,e,i){"use strict";const n=t("./unidirectional_node.js"),r=function(t){this.head,this.size,"undefined"!=typeof t?(this.head=new n(t),this.size=1):(this.head=null,this.size=0)};r.prototype.insertFront=function(t){if("undefined"==typeof t)throw new Error("Too few arguments for SinglyLinkedList.insertFront");var e=new n(t);if(null===this.head)this.head=e;else{var i=this.head;this.head=e,this.head.next=i}++this.size},r.prototype.insertNth=function(t,e){if("undefined"==typeof e||"undefined"==typeof t)throw new Error("Too few arguments for SinglyLinkedList.insertNth");if("number"!=typeof t)throw new TypeError("Invalid argument for SinglyLinkedList.insertNth");if(0>t||t>=this.size&&0!==t)throw new Error("Index out of bounds on SinglyLinkedList.insertNth");if(0===t)return void this.insertFront(e);if(null===this.head)return!1;for(var i=new n(e),r=this.head,o=1;t>o;++o)r=r.next;var s=r.next;r.next=i,i.next=s,++this.size},r.prototype.insertAfter=function(t,e){if("undefined"==typeof e||"undefined"==typeof t)throw new Error("Too few arguments for SinglyLinkedList.insertAfter");if(null===this.head)return!1;var i,r,o=new n(e),s=this.head,h=!1;for(r="object"==typeof t?JSON.stringify(t):t;null!==s;){if(i="object"==typeof s.data?JSON.stringify(s.data):s.data,i===r){h=!0;break}s=s.next}if(h){var u=s.next;return s.next=o,o.next=u,++this.size,!0}return!1},r.prototype.insertBack=function(t){if("undefined"==typeof t)throw new Error("Too few arguments for SinglyLinkedList.insertBack");var e=new n(t);if(null===this.head)this.head=e;else{for(var i=this.head;null!==i.next;)i=i.next;i.next=e}++this.size},r.prototype.remove=function(t){if("undefined"==typeof t)throw new Error("Too few arguments for SinglyLinkedList.remove");if(this.size<=0)throw new Error("Attempted to remove from an empty SinglyLinkedList");if(1===this.size)return this.head=null,void(this.size=0);if(null===this.head&&this.size>0)throw new Error("Null head in an unemptied list. Please report this to https://github.com/nickzuber/needle/issues");var e,i,n=null,r=this.head,o=!1;if(i="object"==typeof t?JSON.stringify(t):t,e="object"==typeof r.data?JSON.stringify(r.data):r.data,e===i)return this.head=r.next,r=null,--this.size,!0;for(n=r,r=n.next;null!==r;){if(e="object"==typeof r.data?JSON.stringify(r.data):r.data,e===i){o=!0,n.next=r.next,r=null,--this.size;break}n=r,r=r.next}return o},r.prototype.removeNth=function(t){if("undefined"==typeof t)throw new Error("Too few arguments for SinglyLinkedList.removeNth");if("number"!=typeof t)throw new TypeError("Invalid argument for SinglyLinkedList.removeNth");if(0>t||t>=this.size)throw new Error("Index out of bounds on SinglyLinkedList.removeNth: "+t);if(1===this.size)return this.head=null,void(this.size=0);var e=null,i=this.head;if(0===t)return this.head=i.next,i=null,void--this.size;e=i,i=i.next;for(var n=1;t>n;++n)e=i,i=i.next;e.next=i.next,i=null,--this.size},r.prototype.find=function(t){if("undefined"==typeof t)throw new Error("Too few arguments for SinglyLinkedList.find");if(this.size<=0)throw new Error("Attempted to find a node from an empty SinglyLinkedList");if(null===this.head&&this.size>0)throw new Error("Null head in an unemptied list. Please report this to https://github.com/nickzuber/needle/issues");for(var e=this.head,i=!1;null!==e;){if(JSON.stringify(e.data)===JSON.stringify(t)){i=!0;break}e=e.next}return i?e:!1},r.prototype.findNth=function(t){if("undefined"==typeof t)throw new TypeError("Too few arguments for SinglyLinkedList.findNth");if("number"!=typeof t)throw new TypeError("Invalid argument for SinglyLinkedList.findNth");if(0>t||t>=this.size)throw new Error("Index out of bounds; attempted to find a node from a SinglyLinkedList that does not exist");if(null===this.head&&this.size>0)throw new Error("Null head in an unemptied list. Please report this to https://github.com/nickzuber/needle/issues");for(var e=this.head,i=0;t>i;++i)e=e.next;return e},e.exports=r},{"./unidirectional_node.js":11}],10:[function(t,e,i){"use strict";const n=t("./unidirectional_node.js"),r=function(t){this.top,this.size,"undefined"!=typeof t?(this.top=new n(t),this.size=1):(this.top=null,this.size=0)};r.prototype.peek=function(){return this.top},r.prototype.push=function(t){if("undefined"==typeof t)throw new Error("Too few arguments in Stack.push");var e=new n(t),i=this.top;this.top=e,this.top.next=i,++this.size},r.prototype.pop=function(){if(0===this.size)throw new Error("Attempted to remove from empty stack in Stack.pop");var t=this.top.next,e=this.top;return this.top=t,--this.size,e},e.exports=r},{"./unidirectional_node.js":11}],11:[function(t,e,i){"use strict";const n=function(t){this.data=t||void 0,this.next=null};e.exports=n},{}]},{},[1]);